(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{615:function(t,e,l){"use strict";l.r(e);var a=l(4),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h2",{attrs:{id:"_1-数组方法分类"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-数组方法分类"}},[t._v("#")]),t._v(" 1. 数组方法分类")]),t._v(" "),l("table",[l("thead",[l("tr",[l("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("作用")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("返回值")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("是否改变原数组")])])]),t._v(" "),l("tbody",[l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("push(...items)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("从数组尾部添加元素")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("添加后的数组长度（length）")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("✔️")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("pop")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("从数组尾部弹出元素")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("弹出的尾部元素")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("✔️")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("shift")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("从数组头部弹出元素")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("弹出的头部元素")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("✔️")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("unshift(...items)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("从数组头部添加元素")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("添加后的数组长度（length）")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("✔️")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("splice(start,deleteCount,...items)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("从start开始删除deleteCount个元素，并在当前位置插入items")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("被删除的元素组成的数组")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("✔️")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("fill(val, start, end)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("从start到end填充val")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("返回[start,end)位置被替换填充了val的原数组")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("✔️")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("copyWithin(target, start, end)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("将[start, end)位置的元素复制覆盖到target起始的位置，不会改变数组长度（多余的复制会被截断）")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("原数组target位置起始被覆盖后返回")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("✔️")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("sort(func)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("不传入func时根据同toString()后的Unicode排序，传入func，根据函数处理排序")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("原数组排序后返回")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("✔️")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("reverse()")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("反转数组")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("原数组反转后返回")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("✔️")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("slice(start, end)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("截取索引值[start, end)对应的元素")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("返回截取元素组成的数组")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("❌")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("concat(...items)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("数组与元素（或数组）拼接")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("返回拼接后的新数组")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("❌")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("indexOf(item, start)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("从start位置查找item")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("找到时返回元素对应的索引值，否则返回-1")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("❌")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("lastIndexOf(item, start)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("从start开始查找item")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("返回 item 在数组中最后出现的位置（索引）")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("❌")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("includes(item)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("查找数组中是否有item")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("有则返回true，无则返回false")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("❌")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("find(func) 🚩")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("通过函数func过滤元素")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("返回符合条件的第一个值")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("❌")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("filter(func) 🚩")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("通过函数func过滤元素")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("返回符合条件的所有值")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("❌")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("findIndex(func)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("通过函数func过滤元素")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("返回符合条件的第一个元素的索引值")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("❌")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("map(func)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("每个元素调用func函数")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("返回新数组（各元素调用了func）")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("❌")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("join()/split()  🚩")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("数组转字符串/字符串转数组")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("返回传入符号连接各数组元素组成的字符串")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("❌")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("reduce(func, init)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("func 分别接收 prev, cur, index, arr四个参数，分别是上次跳用返回值或者初始值，当前值，索引，数组，init为第一次调用时的初始值 。注意：reduce对于空数组不会执行func函数")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("返回func的计算结果")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("❌")])]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("forEach(func)   🚩")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("每个元素调用func  （该循环不可中断）")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("无返回")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("some(func)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("每个元素调用func")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("若是一个满足就返回 true，否则返回false")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),l("tr",[l("td",{staticStyle:{"text-align":"left"}},[t._v("every(func)")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("每个元素调用func")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("若是全部满足就返回 true，否则返回false")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}})])])])])}),[],!1,null,null,null);e.default=i.exports}}]);